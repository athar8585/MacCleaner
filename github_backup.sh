#!/bin/bash

# Script de sauvegarde GitHub automatique pour MacCleaner Pro
# Usage: ./github_backup.sh [repo_name] [description]

set -euo pipefail

REPO_NAME="${1:-MacCleaner}"
DESCRIPTION="${2:-Nettoyeur Mac Ultra-Complet et Professionnel avec surveillance temps r√©el}"
GITHUB_USERNAME="$(git config user.name 2>/dev/null || echo "votre-username")"

echo "üöÄ Sauvegarde GitHub MacCleaner Pro"
echo "=================================="
echo "Repo: $REPO_NAME"
echo "Description: $DESCRIPTION"
echo "Username: $GITHUB_USERNAME"
echo ""

# V√©rifier que nous sommes dans le bon r√©pertoire
if [[ ! -f "mac_cleaner.py" ]]; then
    echo "‚ùå Erreur: Ex√©cutez ce script depuis le r√©pertoire MacCleaner"
    exit 1
fi

# V√©rifier l'√©tat Git
echo "üìã V√©rification de l'√©tat Git..."
if [[ -n "$(git status --porcelain)" ]]; then
    echo "‚ö†Ô∏è Il y a des changements non commit√©s:"
    git status --short
    read -p "Voulez-vous continuer? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "üö´ Op√©ration annul√©e"
        exit 1
    fi
fi

# Pr√©parer les fichiers pour GitHub
echo "üìù Pr√©paration des fichiers GitHub..."

# Copier README pour GitHub si diff√©rent
if [[ -f "README_GITHUB.md" ]]; then
    cp README_GITHUB.md README.md.github
    echo "‚úÖ README GitHub pr√©par√©"
fi

# Commit des fichiers GitHub si n√©cessaires
if [[ -n "$(git status --porcelain)" ]]; then
    git add .gitignore LICENSE README_GITHUB.md github_backup.sh
    git commit -m "docs: ajout fichiers GitHub (LICENSE, .gitignore, README)" || true
fi

# Afficher les informations du repo
echo ""
echo "üìä Statistiques du repo:"
echo "- Commits: $(git rev-list --count HEAD)"
echo "- Branches: $(git branch | wc -l | tr -d ' ')"
echo "- Fichiers: $(find . -type f -not -path './.git/*' -not -path './.venv/*' | wc -l | tr -d ' ')"
echo "- Taille: $(du -sh . | cut -f1)"

# Instructions pour cr√©er le repo GitHub
echo ""
echo "üîß INSTRUCTIONS POUR CR√âER LE REPO GITHUB:"
echo ""
echo "1Ô∏è‚É£ Cr√©er le repo sur GitHub:"
echo "   - Aller sur: https://github.com/new"
echo "   - Nom: $REPO_NAME"
echo "   - Description: $DESCRIPTION"
echo "   - ‚úÖ Public (ou Private selon pr√©f√©rence)"
echo "   - ‚ùå NE PAS initialiser avec README/LICENSE/gitignore"
echo "   - Cliquer 'Create repository'"
echo ""

echo "2Ô∏è‚É£ Configurer la remote et pousser:"
echo "   git remote add origin git@github.com:$GITHUB_USERNAME/$REPO_NAME.git"
echo "   git branch -M main"
echo "   git push -u origin main"
echo ""

echo "3Ô∏è‚É£ Ou via HTTPS (si pas de cl√© SSH):"
echo "   git remote add origin https://github.com/$GITHUB_USERNAME/$REPO_NAME.git"
echo "   git branch -M main" 
echo "   git push -u origin main"
echo ""

# Proposer d'automatiser si GitHub CLI install√©
if command -v gh >/dev/null 2>&1; then
    echo "ü§ñ GitHub CLI d√©tect√©! Voulez-vous cr√©er automatiquement?"
    read -p "Cr√©er le repo automatiquement? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo "üöÄ Cr√©ation automatique du repo..."
        
        # Cr√©er le repo
        gh repo create "$REPO_NAME" --description "$DESCRIPTION" --public
        
        # Ajouter remote et pousser
        git remote add origin "git@github.com:$GITHUB_USERNAME/$REPO_NAME.git"
        git branch -M main
        git push -u origin main
        
        echo "‚úÖ Repo cr√©√© et sauvegard√©!"
        echo "üåê Disponible sur: https://github.com/$GITHUB_USERNAME/$REPO_NAME"
        
        # Proposer d'ouvrir dans le navigateur
        read -p "Ouvrir dans le navigateur? (Y/n): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Nn]$ ]]; then
            open "https://github.com/$GITHUB_USERNAME/$REPO_NAME"
        fi
        
        exit 0
    fi
fi

echo "üìã COMMANDES √Ä COPIER-COLLER:"
echo ""
echo "# Apr√®s avoir cr√©√© le repo sur GitHub:"
echo "git remote add origin git@github.com:$GITHUB_USERNAME/$REPO_NAME.git"
echo "git branch -M main"
echo "git push -u origin main"
echo ""
echo "‚ú® Votre projet sera alors sauvegard√© sur GitHub!"

# Afficher le contenu du README pour v√©rification
echo ""
echo "üìÑ Aper√ßu du README qui sera affich√© sur GitHub:"
echo "================================================"
if [[ -f "README_GITHUB.md" ]]; then
    head -20 README_GITHUB.md
    echo "... (fichier complet: README_GITHUB.md)"
else
    head -20 README.md
fi